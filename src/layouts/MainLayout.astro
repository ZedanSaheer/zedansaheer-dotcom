---
import "../main.css";
import HTMLHeader from "@components/core/HTMLHeader.astro";
import Navbar from "@components/navbar/Navbar.astro";
import { ViewTransitions } from "astro:transitions";
import { setBodyStyles } from "@scripts/utils/methods";
import { type Header, type PageType } from "@scripts/utils/constants";

interface Props {
  bodyStyle?: PageType;
  metaData: Header;
}

const { bodyStyle = "main", metaData } = Astro.props;

const currentPath = Astro.url.pathname;
const isPathIndex = currentPath === "/";
---

<style>
  .polka-dots-bg {
    background-image: radial-gradient(
      var(--black10) 1px,
      var(--primary_white) 1px
    );
    background-size: 20px 20px;
  }

  @media (prefers-color-scheme: dark) {
    .polka-dots-bg {
      background-image: radial-gradient(
        var(--white10) 1px,
        var(--primary_black) 1px
      );
    }
  }
</style>
<html lang="en">
  <head>
    <HTMLHeader
      title={metaData?.title}
      description={metaData?.description}
      image={{
        alt: metaData?.image?.alt,
        src: metaData?.image?.src,
        share: metaData?.image?.share,
        shareDark: metaData?.image?.shareDark,
      }}
      keywords={metaData?.keywords}
      author={metaData?.author}
    />
    <!-- View transitions -->
    <ViewTransitions />
  </head>
  <body class={setBodyStyles(bodyStyle)}>
    <!-- News Banner -->
    <slot name="before-navbar"/>

    <!-- Navbar -->
    {bodyStyle !== "error" && <Navbar />}

    <!-- Body Content -->
    <slot />

    <!-- Animate On Scroll CDN -->
    <script is:inline src="https://unpkg.com/aos@next/dist/aos.js"></script>
    <!-- Init AOS library -->
    <script is:inline>
    AOS.init();
    </script>

    <!-- Close menu after each transition or route change -->
    <script src="@scripts/layouts/main_layout.ts"></script>

    <!-- Clear session data before reload -->
    <script define:vars={{ isPathIndex }}>
    onbeforeunload = () => {
      if (isPathIndex) sessionStorage.clear();
    };
    </script>
  </body>
</html>
@scripts/methods