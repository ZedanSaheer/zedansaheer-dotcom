---
import { getCollection, type CollectionEntry } from "astro:content";
import BlogsCard from "./BlogsCard.astro";
import { formatCollection } from "@scripts/utils/methods";

interface Props {
  sortByDate?: boolean;
  limit?: number;
  displayCardImage?: boolean;
}

const { sortByDate, limit, displayCardImage = true } = Astro.props;
const blogPosts: CollectionEntry<"blogs">[] = await getCollection("blogs");
formatCollection(blogPosts, { sortByDate: sortByDate, limit });
---

<div
  class="flex flex-wrap items-start justify-start gap-10 w-full overflow-hidden"
>
  {
    blogPosts?.map((blog) => {
      const getReadTime = async () => {
        let pluginRendered = await blog.render();
        let minutesRead: string =
          pluginRendered.remarkPluginFrontmatter.minutesToRead;

        return minutesRead;
      };

      return <BlogsCard blog={blog} getReadTime={getReadTime} displayCardImage={displayCardImage}/>;
    })
  }
</div>
